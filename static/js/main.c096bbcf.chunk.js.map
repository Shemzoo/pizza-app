{"version":3,"sources":["components/Navigation/Navigation.js","components/Menu/Pizza/Pizza.js","components/Menu/Menu.js","components/Cart/Item/Item.js","components/Cart/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","linkStyle","color","className","style","to","Pizza","props","name","descr","price","quantity","onClick","inc","dec","add","Menu","incButtonHandler","pizza","index","onPizzaChange","decButtonHandler","pizzas","this","map","key","Component","Item","remove","Cart","item","itemInc","cart","itemDec","removeButtonHandler","itemDel","orderButtonHandler","alert","check","total","DELIVERY_COST","type","placeholder","AVAILABLE_PIZZAS","id","App","state","addButtonHandler","setState","Number","handlePizzaChange","handleIncItemChange","handleDecItemChange","handleItemRemove","splice","path","render","clicked","cartIncButtonHandler","cartDecButtonHandler","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c096bbcf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css'\r\n\r\nexport default function Navigation() {\r\n    const linkStyle = {\r\n        color: 'white'\r\n    };\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            <ul className=\"nav_links\">\r\n                <Link style={linkStyle} to='/menu'>\r\n                    <li>Menu</li>\r\n                </Link>\r\n                <Link style={linkStyle} to='/cart'>\r\n                    <li>Cart</li>\r\n                </Link>   \r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Pizza(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>{props.name}</h3>\r\n            <p>{props.descr}</p>\r\n            <p>{props.price} $</p>\r\n            <p>Quantity: {props.quantity}</p>\r\n            <div className=\"count-buttons\">\r\n                <button className=\"count-buttons__increase\" onClick={props.inc}>+</button>\r\n                <button className=\"count-buttons__decrease\" onClick={props.dec}>-</button>\r\n            </div>\r\n            <button className=\"buy-button\" onClick={props.add}>Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Pizza from './Pizza/Pizza'\r\nimport './Menu.css'\r\n\r\nclass Menu extends Component {\r\n    incButtonHandler = (pizza, index) => {\r\n        this.props.onPizzaChange( {...pizza, quantity: pizza.quantity + 1}, index);\r\n    };\r\n\r\n    decButtonHandler = (pizza, index) => {\r\n        if (this.props.pizzas[index].quantity > 0) {\r\n            this.props.onPizzaChange( {...pizza, quantity: pizza.quantity - 1}, index);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catalog\">\r\n                <ul className=\"catalog-list\">\r\n                    {this.props.pizzas.map((pizza, index) => {\r\n                       return <li key={index}><Pizza\r\n                        key={index}\r\n                        name={pizza.name}\r\n                        descr={pizza.descr}\r\n                        price={pizza.price}\r\n                        quantity={pizza.quantity}\r\n                        add={() => this.props.add(pizza)}\r\n                        inc={() => this.incButtonHandler(pizza, index)}\r\n                        dec={() => this.decButtonHandler(pizza, index)}\r\n                        />\r\n                        </li> \r\n                    })}             \r\n                </ul>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react'\r\n\r\nexport default function Item(props) {\r\n    return (\r\n        <div>\r\n            <p>{props.quantity} delicious \"{props.name}\" at the price of {props.price * props.quantity} $</p>\r\n                <div className=\"count-buttons--cart\">\r\n                    <button className=\"count-buttons__increase--cart\" onClick={props.inc}>+</button>\r\n                    <button className=\"count-buttons__decrease--cart\" onClick={props.dec}>-</button>\r\n                </div>\r\n                <button className=\"remove-button\" onClick={props.remove}>Remove</button>\r\n                <hr className=\"check-line\"/>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Item from './Item/Item'\r\nimport './Cart.css'\r\n\r\nconst CURRENCY_RATE = 0.89;\r\nconst DELIVERY_COST = 16;\r\n\r\nclass Cart extends Component {\r\n    incButtonHandler = (item, index) => {\r\n        this.props.itemInc( {...item, quantity: item.quantity + 1}, index);\r\n    };\r\n\r\n    decButtonHandler = (item, index) => {\r\n        if (this.props.cart[index].quantity > 0) {\r\n            this.props.itemDec( {...item, quantity: item.quantity - 1}, index);\r\n        }\r\n    };\r\n\r\n    removeButtonHandler = (item, index) => {\r\n        this.props.itemDel(item, index)\r\n    };\r\n\r\n    orderButtonHandler = () => {\r\n        alert('Thank you for your order! Our manager will contact you shortly.') \r\n    };\r\n\r\n    render() {\r\n        let check = 'Cart is Empty. Add something from the Menu!';\r\n\r\n        if (this.props.total) {\r\n                check = (\r\n                    <div>\r\n                        <p>Price, US: {this.props.total} $ + {DELIVERY_COST} $ (delivery), total: {this.props.total+DELIVERY_COST} $ </p>\r\n                        <p>Price, EUR: {this.props.total * CURRENCY_RATE} € + {DELIVERY_COST * CURRENCY_RATE} € (delivery), total: {(this.props.total+DELIVERY_COST)*CURRENCY_RATE} € </p>\r\n                        <div className=\"customer-inputs\">\r\n                            <input type=\"text\" placeholder=\"Enter Your Name\"/>\r\n                            <input type=\"text\" placeholder=\"Enter Your Surname\"/>\r\n                            <input type=\"tel\" placeholder=\"Enter Your Phone Number\"/>\r\n                        </div>               \r\n                        <button className=\"order-button\" onClick={this.orderButtonHandler}>Place Order</button>\r\n                    </div>\r\n                )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"cart-list\">\r\n                    {this.props.cart.map((item, index) => {\r\n                        return (\r\n                            <li className=\"cart-list__item\" key={index}>\r\n                                <Item\r\n                                key={index}\r\n                                name={item.name}\r\n                                price={item.price}\r\n                                quantity={item.quantity}\r\n                                inc={() => this.incButtonHandler(item, index)}\r\n                                dec={() => this.decButtonHandler(item, index)}\r\n                                remove={() => this.removeButtonHandler(item, index)}\r\n                                />   \r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                {check}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart\r\n","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Menu from './components/Menu/Menu';\nimport Cart from './components/Cart/Cart'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nconst AVAILABLE_PIZZAS = [\n  { id: 1,\n    name: 'Margherita',\n    price: 15,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 2,\n    name: 'Carbonara',\n    price: 23,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 3,\n    name: 'Crudo',\n    price: 20,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 4,\n    name: 'Pugliese',\n    price: 18,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 5,\n    name: 'Romana',\n    price: 21,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 6,\n    name: 'Schiacciata',\n    price: 30,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 7,\n    name: 'Americana',\n    price: 28,\n    quantity: 0,\n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  },\n\n  { id: 8,\n    name: 'Gorgonzola',\n    price: 29,\n    quantity: 0,  \n    descr: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\n  }\n]\n\nclass App extends Component {\n  state = {\n    pizzas: AVAILABLE_PIZZAS,\n\n    cart: [],\n\n    total: ''\n\n  };  \n\n  addButtonHandler = (pizza) => {\n\n    this.setState( { cart: [...this.state.cart, pizza] } ) \n\n    this.setState( { total: Number(this.state.total + pizza.price * pizza.quantity) } )\n    \n  };\n\n  handlePizzaChange = (pizza, index) => {\n    let pizzas = [...this.state.pizzas];\n    pizzas[index] = pizza;\n    this.setState( { pizzas: pizzas } );\n  }\n\n  handleIncItemChange = (item, index) => {\n    let cart = [...this.state.cart];\n    cart[index] = item;\n    this.setState( { cart: cart } );\n    this.setState( { total: Number(this.state.total + item.price) } )\n  }\n\n  handleDecItemChange = (item, index) => {\n    let cart = [...this.state.cart];\n    cart[index] = item;\n    this.setState( { cart: cart } );\n    this.setState( { total: Number(this.state.total - item.price) } )\n  }\n\n  handleItemRemove = (item, index) => {\n    let cart = [...this.state.cart]\n    cart.splice(index, 1)\n    this.setState( { cart: cart } )\n    this.setState( { total: Number(this.state.total - item.price*item.quantity) } )\n  }\n\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n          <h1>(⊃｡•́‿•̀｡)⊃━☆ﾟ :｡･:*:･ﾟ’★,｡･:*:･ﾟ’☆</h1>\n          <h2>Pizza App!</h2>\n          <p>Welcome to our shop! Press \"Menu\" and choose your pizza!</p>\n          <Navigation />\n          <Switch>  \n            <Route \n            path=\"/menu\"\n            render={() => <Menu \n              pizzas={this.state.pizzas}\n              add={this.addButtonHandler}\n              inc={this.incButtonHandler}\n              dec={this.decButtonHandler}\n              onPizzaChange={this.handlePizzaChange}\n              />}/>\n            <Route\n            path=\"/cart\"\n            render={() => <Cart\n              cart={this.state.cart}\n              total={this.state.total}\n              clicked={this.orderButtonHandler}\n              inc={this.cartIncButtonHandler}\n              dec={this.cartDecButtonHandler}\n              itemInc={this.handleIncItemChange}\n              itemDec={this.handleDecItemChange}\n              itemDel={this.handleItemRemove}/>}\n            />\n          </Switch> \n        </div>\n      </Router>    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}